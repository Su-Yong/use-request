"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[72],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6191:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={id:"start",title:"Start"},u="Start",c={unversionedId:"start",id:"start",title:"Start",description:"This library is available for React Project",source:"@site/docs/basic.md",sourceDirName:".",slug:"/start",permalink:"/use-request/docs/start",editUrl:"https://github.com/Su-Yong/use-request/blob/docs/website/docs/docs/basic.md",tags:[],version:"current",frontMatter:{id:"start",title:"Start"},sidebar:"docsSidebar",previous:{title:"use-request",permalink:"/use-request/docs/"},next:{title:"Fetcher",permalink:"/use-request/docs/fetcher"}},l={},p=[{value:"Quick Start",id:"quick-start",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"start"},"Start"),(0,o.kt)("p",null,"This library is available for React Project"),(0,o.kt)("h2",{id:"quick-start"},"Quick Start"),(0,o.kt)("p",null,"Before using ",(0,o.kt)("inlineCode",{parentName:"p"},"useRequest"),", create a component used ",(0,o.kt)("inlineCode",{parentName:"p"},"useRequest"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const Component = () => {\n  return (\n    <div>\n      <div>Data</div>\n      <button>Upload</button>\n    </div>\n  );\n};\n")),(0,o.kt)("p",null,"then use ",(0,o.kt)("inlineCode",{parentName:"p"},"useRequest")," if you use RESTful API"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const Component = () => {\n  const { data } = useRequest();\n  \n  return (\n    <div>\n      <div>{data}</div>\n      <button>Upload</button>\n    </div>\n  );\n};\n")),(0,o.kt)("p",null,"write URL where send request"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const Component = () => {\n  const { data } = useRequest('https://api.example.com/upload');\n\n  return (\n    <div>\n      <div>{data}</div>\n      <button>Upload</button>\n    </div>\n  );\n};\n")),(0,o.kt)("p",null,"And make button send specific request"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const Component = () => {\n  const { data, fetcher } = useRequest('https://api.example.com/upload');\n\n  const onClick = () => {\n    fetcher({\n      myData: 'value',\n    });\n  };\n\n  return (\n    <div>\n      <div>{data}</div>\n      <button onClick={onClick}>Upload</button>\n    </div>\n  );\n};\n")),(0,o.kt)("p",null,"That's all. ",(0,o.kt)("inlineCode",{parentName:"p"},"useRequest")," is so easy to use. Not only this."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const url = 'https://api.example.com/upload';\n\nconst Child = () => {\n  const { error, fetcher } = useRequest(url);\n\n  const onClick = () => {\n    fetcher({\n      input: Math.random(),\n    });\n  };\n\n  return (\n    <div>\n      {error && 'Error'}\n      {!error && <button onClick={onClick}>Submit</button>}\n    </div>\n  );\n};\n\nlet count = -1;\nconst Parent = () => {\n  const { data } = useRequest(url);\n\n  count += 1;\n\n  return (\n    <div>\n      <div>Last data is \"{data}\"</div>\n      <div>data is provided {count} times</div>\n      <Child />\n    </div>\n  )\n};\n")),(0,o.kt)("p",null,"As in the example, if they are different components but use the same URL, their values will be synchronized. Also, the total number of renderings of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Parent")," component is the number of times ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," has been changed. This is where the nature of ",(0,o.kt)("inlineCode",{parentName:"p"},"use-request")," comes into play. ",(0,o.kt)("inlineCode",{parentName:"p"},"useRequest")," only triggers a re-render when the used property is updated."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Of course you can also send the ",(0,o.kt)("strong",{parentName:"p"},"request")," individually even if the ",(0,o.kt)("strong",{parentName:"p"},"URL")," is the same. ",(0,o.kt)("inlineCode",{parentName:"p"},"use-request")," is well aware of that, so it supports the ",(0,o.kt)("a",{parentName:"p",href:"options#cache"},"cache")," option and ",(0,o.kt)("a",{parentName:"p",href:"request-config"},"RequestConfig"),"."))))}m.isMDXComponent=!0}}]);